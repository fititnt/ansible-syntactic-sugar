---

# FILE:            {{ role_path }}/tasks/composer/install/main.yml
# LICENSE:         Public Domain
#
# SEE:             https://www.digitalocean.com/community/tutorials/como-instalar-e-usar-o-composer-no-ubuntu-18-04-pt
# SEE:             https://getcomposer.org/download/
# SEE:             https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md

# TODO: break install in 2 files, since is necessary win_tempfile. win_shell and
#       win_get_url (fititnt, 2020-01-13 04:46 BRT)

# TODO: fix indepondence (fititnt, 2020-01-13 04:19 BRT)

# - name: "composer | install"
#   debug:
#     msg:
#       - "This is a draft. Not implemented at the moment"
#       - "{{ composer_options }}"
#   tags:
#     - s2s-install-composer
#     - s2s-install-composers

- name: "[packaging-languages] composer | install.yml: check if already installed"
  stat:
    path: "{{ composer_options.path }}/composer"
  register: composer_previus_installation
  tags:
    - s2s-install-composer
    - s2s-install-composers

# - name: "[packaging-languages] composer debug"
#   debug:
#     msg:
#       composer_previus_installation: "{{ composer_previus_installation }}"
#       composer_options: "{{ composer_options }}"
#       path: "{{ composer_options.path }}/composer"
#   tags:
#     - s2s-install-composer
#     - s2s-install-composers

- name: "[packaging-languages] composer: install.yml: decide if should force install or not"
  set_fact:
    composer_continue_install: "{{ ((composer_options.force is defined)
     and (composer_options.force|bool))
     or (not composer_previus_installation.stat.exists) }}"
  changed_when: false

- name: "[packaging-languages] composer | install.yml (*nix): temp file"
  tempfile:
    state: file
    prefix: "composer-setup"
    suffix: ".php"
  register: composer_temp_file
  become: yes
  become_user: "{{ composer_options.user | default(omit) }}"
  when:
    - "(a2s_internal_iswindows is undefined)
      or (a2s_internal_iswindows|bool is sameas false)"
    - "composer_continue_install|bool"
  tags:
    - s2s-install-composer
    - s2s-install-composers

# - name: "[packaging-languages] composer | install.yml (Windows): temp file"
#   win_tempfile:
#     state: file
#     prefix: "composer-setup"
#     suffix: ".php"
#   register: composer_temp_file
#   when:
#     - "(a2s_internal_iswindows is defined)
#       and (a2s_internal_iswindows|bool is sameas true)"
#   tags:
#     - s2s-install-composer
#     - s2s-install-composers

# - name: "[packaging-languages] debug"
#   debug:
#     msg:
#       composer_temp_file: "{{ composer_temp_file }}"
#   tags:
#     - s2s-install-composer
#     - s2s-install-composers

- name: "[packaging-languages] composer | install.yml: download installer"
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ composer_temp_file.path }}"
    mode: '0440'
  become: yes
  become_user: "{{ composer_options.user | default(omit) }}"
  when:
    - "composer_continue_install|bool"
  tags:
    - s2s-install-composer
    - s2s-install-composers

- name: "[packaging-languages] composer | install.yml: php composer-setup.php (...)"
  command: "{{ composer_options.php | default('php') }} {{ composer_temp_file.path }} --install-dir='{{ composer_options.path }}' --filename=composer {{ (composer_options.version is defined) and (composer_options.version) | ternary('--version=' + composer_options.version, '') }}" # noqa 204
  register: composer_shell_run
  become: yes
  become_user: "{{ composer_options.user | default(omit) }}"
  # Ansible does not offer 'php' module. So ignore warns about using shell
  when:
    - "composer_continue_install|bool"
  tags:
    - s2s-install-composer
    - s2s-install-composers

- name: "[packaging-languages] composer | install.yml: shell result"
  debug:
    msg:
      composer_shell_run: "{{ composer_shell_run }}"
  when:
    - "(composer_shell_run is defined)"
    - "composer_continue_install|bool"
  tags:
    - s2s-install-composer
    - s2s-install-composers
